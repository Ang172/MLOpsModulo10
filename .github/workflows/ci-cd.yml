name: CI/CD ML Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Instalar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Instalar dependencias
      run: pip install -r requirements.txt

    - name: Entrenar modelo
      run: python train_model.py

    - name: Test endpoints
      run: |
        pip install requests
        python -c "import requests; import time; import subprocess; import sys; proc = subprocess.Popen([sys.executable, 'app.py']); time.sleep(5); response = requests.get('http://localhost:5000/'); print('Home status:', response.status_code); sample_data = {'input': [17.99, 10.38, 122.8, 1001.0, 0.1184, 0.2776, 0.3001, 0.1471, 0.2419, 0.07871, 1.095, 0.9053, 8.589, 153.4, 0.006399, 0.04904, 0.05373, 0.01587, 0.03003, 0.006193, 25.38, 17.33, 184.6, 2019.0, 0.1622, 0.6656, 0.7119, 0.2654, 0.4601, 0.1189]}; response = requests.post('http://localhost:5000/predict', json=sample_data); print('Predict status:', response.status_code); proc.terminate(); proc.wait()"

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Build imagen Docker
      run: docker build -t ml-app .

    - name: Test Docker container
      run: |
        docker run -d -p 5000:5000 --name test-container ml-app
        sleep 5
        curl -f http://localhost:5000/ || exit 1
        docker stop test-container

  docker-push:
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Login a GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build y Push Docker image
      run: |
        docker build -t ghcr.io/${{ github.repository }}:latest .
        docker push ghcr.io/${{ github.repository }}:latest